# .gitlab-ci.yml
# Author: Robert Van Voorhees <robert_van_voorhees@troweprice.com>
# Description: This is a basic GitLab Runner CI file for building and testing a basic Create React App frontend.
variables:
  CI: 'true'

stages:
  - build
  - test
  - package
  - test-ui
  - sonar
  - deploy

# Run the build first, to make sure that all minification and uglification properly executes.
build:
  image: node:8
  stage: build
  script:
    - npm install
    - CI='' npm run build
  cache:
    key: '$CI_COMMIT_REF_SLUG'
    paths:
      - node_modules
  artifacts:
    name: '$CI_COMMIT_REF_NAME'
    paths:
      - build/
  only:
    - branches

test:
  image: node:8
  stage: test
  script:
    - npm install
    - npm run test -- --ci --coverage --reporters=default --reporters=jest-junit
  cache:
    key: '$CI_COMMIT_REF_SLUG'
    paths:
      - node_modules
  artifacts:
    reports:
      junit: junit.xml
  only:
    - branches

package:
  image: docker:latest
  stage: package
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - ls -la
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  dependencies:
    - build
  only:
    - branches

test-ui:
  image: docker:latest
  stage: test-ui
  cache:
    key: '$CI_COMMIT_REF_SLUG'
    paths:
      - node_modules
  services:
    - docker:dind
  artifacts:
    reports:
      junit: ./shared/testOutput/e2e-junit.xml
  dependencies:
    - package
  before_script:
    - apk --no-cache add python python-dev py-pip build-base curl bash
    - curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
    - chmod +x /usr/local/bin/docker-compose
    - pip install docker-compose
  script:
    - ls -la
    - docker version
    - docker-compose version
    - 'export SHARED_PATH="$(dirname ${CI_PROJECT_DIR})/shared"'
    - echo ${SHARED_PATH}
    - mkdir -p ${SHARED_PATH}
    - cp -R node_modules wdio.conf.js .babelrc package*.json scripts e2e ${SHARED_PATH}
    - docker run --rm -v ${SHARED_PATH}:${SHARED_PATH} node:8 find ${SHARED_PATH}
    - docker run --rm -v ${SHARED_PATH}:${SHARED_PATH} node:8 ls -la ${SHARED_PATH}
    - cd ${SHARED_PATH} && ./scripts/run-e2e.sh
  only:
    - branches
